In file included from matrixops.cpp:1:
../include/matrixops.h:5:1: error: 'Matrix' does not name a type
    5 | Matrix scalarOp(const Matrix &m, double scalar, char op);
      | ^~~~~~
../include/matrixops.h:6:1: error: 'Matrix' does not name a type
    6 | Matrix elementWiseOp(const Matrix &a, const Matrix &b, char op);
      | ^~~~~~
../include/matrixops.h:7:1: error: 'Matrix' does not name a type
    7 | Matrix power(const Matrix &m, int exponent);
      | ^~~~~~
../include/matrixops.h:8:1: error: 'Matrix' does not name a type
    8 | Matrix diagonal(const Matrix &m);
      | ^~~~~~
../include/matrixops.h:9:1: error: 'Matrix' does not name a type
    9 | Matrix rankMatrix(const Matrix &m);
      | ^~~~~~
../include/matrixops.h:10:1: error: 'Matrix' does not name a type
   10 | Matrix solve(const Matrix &A, const Matrix &B);
      | ^~~~~~
../include/matrixops.h:11:1: error: 'Matrix' does not name a type
   11 | Matrix identityMatrixWrapper(int size);
      | ^~~~~~
../include/matrixops.h:13:1: error: 'Matrix' does not name a type
   13 | Matrix multiplyMatrices(const Matrix &a, const Matrix &b);
      | ^~~~~~
../include/matrixops.h:14:1: error: 'Matrix' does not name a type
   14 | Matrix determinantMatrix(const Matrix &m);
      | ^~~~~~
../include/matrixops.h:15:23: error: 'Matrix' does not name a type
   15 | int computeRank(const Matrix &m);
      |                       ^~~~~~
../include/matrixops.h:16:1: error: 'Matrix' does not name a type
   16 | Matrix solveLinearSystem(const Matrix &A, const Matrix &B);
      | ^~~~~~
../include/matrixops.h:17:1: error: 'Matrix' does not name a type
   17 | Matrix identityMatrix(int size);
      | ^~~~~~
../include/matrixops.h:19:1: error: 'Matrix' does not name a type
   19 | Matrix executeMATOperation(int opcode, const Matrix &A, const Matrix &B, double scalar = 0.0, int intArg = 0);
      | ^~~~~~
../include/matrixops.h: In function 'MatrixValue matSolve(const MatrixValue&, const MatrixValue&)':
../include/matrixops.h:56:24: error: 'matInverse' was not declared in this scope
   56 |     MatrixValue Ainv = matInverse(A);
      |                        ^~~~~~~~~~
../include/matrixops.h:59:21: error: 'matMultiply' was not declared in this scope
   59 |     MatrixValue X = matMultiply(Ainv, B);
      |                     ^~~~~~~~~~~
matrixops.cpp: In function 'void executeDIM(const std::string&)':
matrixops.cpp:192:26: error: cannot convert 'size_t' {aka 'long unsigned int'} to 'const std::vector<int>&'
  192 |     mat.configureStorage(totalElements);
      |                          ^~~~~~~~~~~~~
      |                          |
      |                          size_t {aka long unsigned int}
In file included from ../include/matrixops.h:20:
../include/program_structure.h:132:49: note:   initializing argument 1 of 'void MatrixValue::configureStorage(const std::vector<int>&)'
  132 |   void configureStorage(const std::vector<int>& dims) {
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:196:26: error: cannot convert 'size_t' {aka 'long unsigned int'} to 'const std::vector<int>&'
  196 |     mat.configureStorage(totalElements);
      |                          ^~~~~~~~~~~~~
      |                          |
      |                          size_t {aka long unsigned int}
../include/program_structure.h:132:49: note:   initializing argument 1 of 'void MatrixValue::configureStorage(const std::vector<int>&)'
  132 |   void configureStorage(const std::vector<int>& dims) {
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp: In function 'MatrixValue matElementWiseOp(const MatrixValue&, const MatrixValue&, char)':
matrixops.cpp:235:24: error: cannot convert 'size_t' {aka 'long unsigned int'} to 'const std::vector<int>&'
  235 |     R.configureStorage(total);
      |                        ^~~~~
      |                        |
      |                        size_t {aka long unsigned int}
../include/program_structure.h:132:49: note:   initializing argument 1 of 'void MatrixValue::configureStorage(const std::vector<int>&)'
  132 |   void configureStorage(const std::vector<int>& dims) {
      |                         ~~~~~~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:237:41: error: 'struct PROGRAM_STRUCTURE' has no member named 'getMatrixValue'
  237 |         double a = A.isSparse ? program.getMatrixValue(A, i) : A.denseValues[i].numericValue;
      |                                         ^~~~~~~~~~~~~~
matrixops.cpp:238:41: error: 'struct PROGRAM_STRUCTURE' has no member named 'getMatrixValue'
  238 |         double b = B.isSparse ? program.getMatrixValue(B, i) : B.denseValues[i].numericValue;
      |                                         ^~~~~~~~~~~~~~
matrixops.cpp: In function 'double matDeterminant(const MatrixValue&)':
matrixops.cpp:342:36: error: 'MatrixIndex' {aka 'struct std::pair<int, int>'} has no member named 'dimensions'
  342 |                 MatrixIndex mi; mi.dimensions = {i,j};
      |                                    ^~~~~~~~~~
matrixops.cpp: In function 'void executeMAT(const std::string&)':
matrixops.cpp:535:54: error: no matching function for call to 'executeMATOperation(int, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, <brace-enclosed initializer list>, double&)'
  535 |             program.matrices[X] = executeMATOperation((op == '+') ? 1 : 2,
      |                                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
  536 |                 program.matrices[B], {}, scalar);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 4 provided
matrixops.cpp:539:54: error: no matching function for call to 'executeMATOperation(int, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, <brace-enclosed initializer list>, double&)'
  539 |             program.matrices[X] = executeMATOperation((op == '+') ? 1 : 2,
      |                                   ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
  540 |                 program.matrices[A], {}, scalar);
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 4 provided
matrixops.cpp:542:54: error: no matching function for call to 'executeMATOperation(int, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  542 |             program.matrices[X] = executeMATOperation(3,
      |                                   ~~~~~~~~~~~~~~~~~~~^~~
  543 |                 program.matrices[A],
      |                 ~~~~~~~~~~~~~~~~~~~~                  
  544 |                 program.matrices[B]);
      |                 ~~~~~~~~~~~~~~~~~~~~                  
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:549:45: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  549 |         v.numericValue = executeMATOperation(4, {}, program.matrices[m[2]])[0][0];
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:554:53: error: no matching function for call to 'executeMATOperation(int, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  554 |         program.matrices[m[1]] = executeMATOperation(5,
      |                                  ~~~~~~~~~~~~~~~~~~~^~~
  555 |             program.matrices[m[2]],
      |             ~~~~~~~~~~~~~~~~~~~~~~~                  
  556 |             program.matrices[m[3]]);
      |             ~~~~~~~~~~~~~~~~~~~~~~~                  
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:560:53: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, double, int&)'
  560 |         program.matrices[m[1]] = executeMATOperation(6,
      |                                  ~~~~~~~~~~~~~~~~~~~^~~
  561 |             {}, program.matrices[m[2]], 0.0, exponent);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 5 provided
matrixops.cpp:564:53: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  564 |         program.matrices[m[1]] = executeMATOperation(7,
      |                                  ~~~~~~~~~~~~~~~~~~~^~~
  565 |             {}, program.matrices[m[2]]);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~              
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:569:45: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  569 |         v.numericValue = executeMATOperation(8, {}, program.matrices[m[2]])[0][0];
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:574:53: error: no matching function for call to 'executeMATOperation(int, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  574 |         program.matrices[m[1]] = executeMATOperation(9,
      |                                  ~~~~~~~~~~~~~~~~~~~^~~
  575 |             program.matrices[m[2]], program.matrices[m[3]]);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:579:53: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, <brace-enclosed initializer list>, double, int&)'
  579 |         program.matrices[m[1]] = executeMATOperation(10, {}, {}, 0.0, size);
      |                                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 5 provided
matrixops.cpp:583:45: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  583 |         v.numericValue = executeMATOperation(11, {}, program.matrices[m[2]])[0][0];
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:588:53: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  588 |         program.matrices[m[1]] = executeMATOperation(12, {}, program.matrices[m[2]]);
      |                                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp:598:21: error: 'struct PROGRAM_STRUCTURE' has no member named 'sparseMatrices'
  598 |             program.sparseMatrices[m[1]] = sm;
      |                     ^~~~~~~~~~~~~~
matrixops.cpp:600:57: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, <brace-enclosed initializer list>, double, int&)'
  600 |             program.matrices[m[1]] = executeMATOperation(13, {}, {}, static_cast<double>(cols), rows);
      |                                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 5 provided
matrixops.cpp:608:21: error: 'struct PROGRAM_STRUCTURE' has no member named 'sparseMatrices'
  608 |             program.sparseMatrices[m[1]] = sm;
      |                     ^~~~~~~~~~~~~~
matrixops.cpp:610:57: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, <brace-enclosed initializer list>, double, int&)'
  610 |             program.matrices[m[1]] = executeMATOperation(14, {}, {}, static_cast<double>(cols), rows);
      |                                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 5 provided
matrixops.cpp:614:53: error: no matching function for call to 'executeMATOperation(int, <brace-enclosed initializer list>, std::map<std::__cxx11::basic_string<char>, MatrixValue>::mapped_type&)'
  614 |         program.matrices[m[1]] = executeMATOperation(15, {}, program.matrices[m[2]]);
      |                                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&, const MatrixValue&, const MatrixValue&, double, int)'
   62 | MatrixValue executeMATOperation(const std::string& line,
      |             ^~~~~~~~~~~~~~~~~~~
../include/matrixops.h:62:52: note:   no known conversion for argument 1 from 'int' to 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'}
   62 | MatrixValue executeMATOperation(const std::string& line,
      |                                 ~~~~~~~~~~~~~~~~~~~^~~~
matrixops.cpp:19:13: note: candidate: 'MatrixValue executeMATOperation(const std::string&)'
   19 | MatrixValue executeMATOperation(const std::string&);
      |             ^~~~~~~~~~~~~~~~~~~
matrixops.cpp:19:13: note:   candidate expects 1 argument, 3 provided
matrixops.cpp: In function 'MatrixValue executeMATOperation(const std::string&)':
matrixops.cpp:705:16: error: 'matIdentity' was not declared in this scope
  705 |         return matIdentity(mat.dimensions[0]);
      |                ^~~~~~~~~~~
matrixops.cpp:710:16: error: 'matOnes' was not declared in this scope
  710 |         return matOnes(mat.dimensions[0], mat.dimensions[1]);
      |                ^~~~~~~
matrixops.cpp:715:16: error: 'matZeros' was not declared in this scope
  715 |         return matZeros(mat.dimensions[0], mat.dimensions[1]);
      |                ^~~~~~~~
