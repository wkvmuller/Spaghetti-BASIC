<program> ::= <line> { <line> }

<line> ::= <linenumber> <statement>

<linenumber> ::= <unsigned-integer>

<statement> ::= <letstmt>
              | <seedstmt>
              | <printstmt>
              | <inputstmt>
              | <gotostmt>
              | <ifstmt>
              | <forstmt>
              | <nextstmt>
              | <readstmt>
              | <datastmt>
              | <reststmt>
              | <endstmt>
              | <defstmt>
              | <dimstmt>
              | <remstmt>
              | <stopstmt>
              | <gosubstmt>
              | <returnstmt>
              | <onstmt>
              | <matstmt>
              | <matreadstmt>
              | <matprintstmt>
              | <printusingstmt>
              | <formatstmt>
              | <beepstmt>
              | <openstmt>
              | <closestmt>
              | <printfilestmt>
              | <inputfilestmt>
              | <matprintfilestmt>
              | <printfileusingstmt>
              | <whilestmt>
              | <wendstmt>
              | <repeatstmt>
              | <untilstmt>

<letstmt> ::= LET <identifier> = <expression>

<printstmt> ::= PRINT <printlist>
<printlist> ::= <printitem> { , <printitem> }
<printitem> ::= <expression> | <string>

<inputstmt> ::= INPUT [ <string> ; ] <varlist>
<varlist> ::= <identifier> { , <identifier> }

<gotostmt> ::= GOTO <linenumber>

<ifstmt> ::= IF <expression> THEN <statement>

<forstmt> ::= FOR <identifier> = <expression> TO <expression> [ STEP <expression> ]

<nextstmt> ::= NEXT <identifier>

<readstmt> ::= READ <varlist>

<datastmt> ::= DATA <datalist>
<datalist> ::= <datum> { , <datum> }
<datum> ::= <number> | <string>

<reststmt> ::= RESTORE

<endstmt> ::= END

<stopstmt> ::= STOP

<defstmt> ::= DEF FN <identifier> ( <identifier> ) = <expression>

<dimstmt> ::= DIM <identifier> ( <expressionlist> )

<remstmt> ::= REM <comment>

<gosubstmt> ::= GOSUB <linenumber>

<returnstmt> ::= RETURN

<onstmt> ::= ON <expression> GOTO <linenumber> { , <linenumber> }
          | ON <expression> GOSUB <linenumber> { , <linenumber> }

<matstmt> ::= MAT <identifier> = <matexpr>

<matexpr> ::= <identifier>
            | <identifier> + <identifier>
            | <identifier> - <identifier>
            | <identifier> * <identifier>
            | <number> * <identifier>
            | <identifier> * <number>
            | INV ( <identifier> )
            | TRANS ( <identifier> )

<matreadstmt> ::= MAT READ <identifier>
<matprintstmt> ::= MAT PRINT <identifier>

<printusingstmt> ::= PRINT USING <linenumber> <printlist>
<formatstmt> ::= <linenumber> := <string>

<beepstmt> ::= BEEP

<openstmt> ::= OPEN <string> FOR <filemode> AS # <unsigned-integer>
<filemode> ::= INPUT | OUTPUT | APPEND

<closestmt> ::= CLOSE # <unsigned-integer>

<printfilestmt> ::= PRINT # <unsigned-integer> , <printlist>
<inputfilestmt> ::= INPUT # <unsigned-integer> , <varlist>

<matprintfilestmt> ::= MAT PRINT # <unsigned-integer> , <identifierlist>
<identifierlist> ::= <identifier> { , <identifier> }

<printfileusingstmt> ::= PRINT # <unsigned-integer> USING <linenumber> <printlist>

<whilestmt> ::= WHILE <expression>
<wendstmt> ::= WEND
<repeatstmt> ::= REPEAT
<untilstmt> ::= UNTIL <expression>

<expression> ::= <term> { <addop> <term> }
<term> ::= <factor> { <mulop> <factor> }
<factor> ::= <primary> | - <primary>
<primary> ::= <number>
           | <identifier>
           | <identifier> ( <expression> )
           | ( <expression> )
           | <mathfunction> ( <expressionlist> )
           | <stringfunction> ( <expressionlist> )

<expressionlist> ::= <expression> { , <expression> }

<mathfunction> ::= SIN | COS | TAN  | SQR
                 | ATN | ASN | ACS 
                 | COT | SEC | CSC
                 | LOGX | LOG10 | CLOG
                 | EXP | RND | INT
                 | DEG2RAD | RAD2DEG
                 | ASCII | VALUE | TEST$ | POW
                 | ROUND | FLOOR | CEIL
                 | TIME  | DET | IDENTITY
<stringfunction> ::= LEFT$ | RIGHT$ | MID$ | LEN$ | CHR$ | STRING$ | TIME$ | DATE$

<addop> ::= + | -
<mulop> ::= * | /

<identifier> ::= <letter> { <letter> | <digit> } [ $ ]
<number> ::= <unsigned-integer> | <unsigned-real>
<string> ::= " <characters> "
<letter> ::= A | B | ... | Z
<digit> ::= 0 | 1 | ... | 9

<unsigned-integer> ::= <digit> { <digit> }
<unsigned-real> ::= <unsigned-integer> . <unsigned-integer>

<comment> ::= { any characters except end-of-line }


<seedstmt> ::= SEED <unsigned-integer>
<defstmt> ::= DEF FN <identifier> "(" <identifier> ")" "=" <expression>
:contentReference[oaicite:0]{index=0}&#8203;:contentReference[oaicite:1]{index=1}
