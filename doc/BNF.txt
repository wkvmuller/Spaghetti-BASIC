<program> ::= <line> { <line> }

<line> ::= <linenumber> <statement>

<linenumber> ::= <unsigned-integer>

<statement> ::= <letstmt>
              | <matstmt>
              | <printstmt>
              | <inputstmt>
              | <gotostmt>
              | <ifstmt>
              | <forstmt>
              | <nextstmt>
              | <readstmt>
              | <datastmt>
              | <reststmt>
              | <endstmt>
              | <defstmt>
              | <dimstmt>
              | <remstmt>
              | <stopstmt>
              | <gosubstmt>
              | <returnstmt>
              | <onstmt>

<letstmt> ::= LET <identifier> = <expression>

<printstmt> ::= PRINT <printlist>
<printlist> ::= <printitem> { , <printitem> }
<printitem> ::= <expression> | <string>

<inputstmt> ::= INPUT <varlist>
<varlist> ::= <identifier> { , <identifier> }

<gotostmt> ::= GOTO <linenumber>

<ifstmt> ::= IF <expression> THEN <statement>

<forstmt> ::= FOR <identifier> = <expression> TO <expression> [ STEP <expression> ]

<nextstmt> ::= NEXT <identifier>

<readstmt> ::= READ <varlist>

<datastmt> ::= DATA <datalist>
<datalist> ::= <datum> { , <datum> }
<datum> ::= <number> | <string>

<reststmt> ::= RESTORE

<endstmt> ::= END

<stopstmt> ::= STOP

<defstmt> ::= DEF FN <identifier> ( <identifier> ) = <expression>

<dimstmt> ::= DIM <identifier> ( <expressionlist> )

<remstmt> ::= REM <comment>

<gosubstmt> ::= GOSUB <linenumber>

<returnstmt> ::= RETURN

<onstmt> ::= ON <expression> GOTO <linenumber> { , <linenumber> }
          | ON <expression> GOSUB <linenumber> { , <linenumber> }

<expression> ::= <term> { <addop> <term> }
<term> ::= <factor> { <mulop> <factor> }
<factor> ::= <primary> | - <primary>
<primary> ::= <number>
           | <identifier>
           | <identifier> ( <expression> )
           | ( <expression> )
           | <mathfunction> ( <expressionlist> )
           | <stringfunction> ( <expressionlist> )

<expressionlist> ::= <expression> { , <expression> }

<mathfunction> ::= SIN | COS | TAN 
                 | ATN | ASN | ACS 
                 | COT | SEC | CSC
                 | LOG | LOG10 | CLOG
                 | EXP | RND | INT
                 | DEG2RAD | RAD2DEG
                 | ASCII | VALUE | TEST$

<stringfunction> ::= LEFT$ | RIGHT$ | MID$ | LEN$ | CHR$ | STRING$

<addop> ::= + | -
<mulop> ::= * | /

<identifier> ::= <letter> { <letter> | <digit> } [ $ ]
<number> ::= <unsigned-integer> | <unsigned-real>
<string> ::= " <characters> "
<letter> ::= A | B | ... | Z
<digit> ::= 0 | 1 | ... | 9

<unsigned-integer> ::= <digit> { <digit> }
<unsigned-real> ::= <unsigned-integer> . <unsigned-integer>

<comment> ::= { any characters except end-of-line }


<matstmt> ::= MAT <identifier> = <matexpr>

<matexpr> ::= <identifier>
            | <identifier> + <identifier>
            | <identifier> - <identifier>
            | <identifier> * <identifier>
            | <number> * <identifier>
            | <identifier> * <number>
            | INV ( <identifier> )
            | TRANS ( <identifier> )
